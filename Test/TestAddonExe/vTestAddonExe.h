//	vTestAddonExe.h - Generated by the "Microsoft Visio 2010 SDK 
//	Add-on Wizard"
//
//	<summary>
//	This file contains the Visio add-on class definitions.
//	</summary>
//	

#pragma once

#include "basetyps.h"
#include "wtypes.h"

#include "vaddon.h"		//	parent class, VAddon

//	VTestAddonExe - Subclass of VAddon
//
//	<summary>
//	VTestAddonExe is the wizard generated Visio 
//	add-on class
//	</summary>
//

class VTestAddonExe : public VAddon {

public:
	//	Constructor and destructor
	VTestAddonExe(
		VAO_ATTS atts,					//	[IN] Add-on attributes
		VAO_ENABMASK enabMask,			//	[IN] Add-on enable mask
		VAO_INVOKEMASK invokeOnMask,	//	[IN] Add-on invoke mask
		VAO_NOTIFYMASK notifyOnMask,	//	[IN] Add-on notify mask
		LPCTSTR lpNameU,				//	[IN] Add-on universal name (Not used by Visio for Exe add-ons
		UINT uIDLocalName);				//	[IN] Add-on Local name resource id (Not used by Visio for Exe add-ons)

	virtual ~VTestAddonExe();

	//	VAddon Overrides
	virtual VAORC Run(
		LPVAOV2LSTRUCT pV2L);			//	[IN] Structure passed by Visio

	virtual VAORC IsEnabled(
		LPVAOV2LSTRUCT pV2L);			//	[IN] Structure passed by Visio

	virtual VAORC Help(
		LPVAOV2LSTRUCT pV2L);			//	[IN] Structure passed by Visio

	virtual VAORC About(
		LPVAOV2LSTRUCT pV2L);			//	[IN] Structure passed by Visio

	virtual VAORC Load(
		WORD wVersion,					//	[IN] Add-on interface version
		LPVOID p);						//	[IN] Pointer to call back function
										//	in Visio.

	virtual VAORC Unload(
		WORD wParam,					//	[IN] wParam passed by Visio
		LPVOID p);						//	[IN] lpParam passed by Visio

	virtual VAORC KillSession(
		LPVAOV2LSTRUCT pV2L);			//	[IN] Structure passed by Visio

	virtual HINSTANCE GetInstance(
		long nFlags = 0L);				//	[IN] Flags

	virtual HINSTANCE GetResourceHandle();

	//	VTestAddonExe convenience methods:
	virtual HRESULT GetApp(
		LPVAOV2LSTRUCT pV2L,			//	[IN] Structure passed by Visio
		Visio::IVApplicationPtr &app);		//	[OUT] Application object

private:
	Visio::IVApplicationPtr m_app;


	// Prevent generation of default constructors and 
	// operators

	VTestAddonExe();
	VTestAddonExe(const VTestAddonExe &);
	VTestAddonExe & operator=(const VTestAddonExe &);
};

extern VTestAddonExe g_vTestAddonExeAddon;

